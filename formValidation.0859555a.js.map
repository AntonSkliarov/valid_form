{"version":3,"sources":["helpers/_functions.js","helpers/_constants.js","scripts/formValidation.js"],"names":["FUNC","createErrorElement","elementName","errorElement","document","createElement","innerHTML","errorText","setAttribute","INPUTS","title","type","input","getElementById","container","querySelector","isValid","isAllFieldsValid","inputValidation","element","formElement","onfocus","remove","every","onblur","inputValue","value","trim","toLowerCase","append","length","test","formValidation","map","form","addEventListener","event","preventDefault"],"mappings":"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","file":"formValidation.0859555a.js","sourceRoot":"..\\src","sourcesContent":["const FUNC = {\n  createErrorElement: (elementName) => {\n    const errorElement = document.createElement('p');\n    errorElement.innerHTML = elementName.errorText;\n    errorElement.setAttribute('class', 'error');\n\n    return errorElement;\n  },\n};\n\nexport default FUNC;\n","const INPUTS = [\n  {\n    title: 'Name',\n    type: 'text',\n    input: document.getElementById('name'),\n    container: document.querySelector('#name-container'),\n    errorText: null,\n    errorElement: null,\n    isValid: false,\n  },\n  {\n    title: 'Surname',\n    type: 'text',\n    input: document.getElementById('surname'),\n    container: document.querySelector('#surname-container'),\n    errorText: null,\n    errorElement: null,\n    isValid: false,\n  },\n  {\n    title: 'Phone',\n    type: 'tel',\n    input: document.getElementById('phone'),\n    container: document.querySelector('#phone-container'),\n    errorText: null,\n    errorElement: null,\n    isValid: false,\n  },\n  {\n    title: 'Email',\n    type: 'email',\n    input: document.getElementById('email'),\n    container: document.querySelector('#email-container'),\n    errorText: null,\n    errorElement: null,\n    isValid: false,\n  },\n  {\n    title: 'Password',\n    type: 'password',\n    input: document.getElementById('pass'),\n    container: document.querySelector('#pass-container'),\n    errorText: null,\n    errorElement: null,\n    isValid: false,\n  },\n];\n\nexport default INPUTS;\n","import FUNC from '../helpers/_functions';\nimport INPUTS from '../helpers/_constants';\n\nlet isAllFieldsValid = false;\n\nconst inputValidation = (element) => {\n  const formElement = element;\n\n  formElement.input.onfocus = () => {\n    if (formElement.errorElement) {\n      formElement.errorElement.remove();\n\n      formElement.isValid = false;\n      isAllFieldsValid = INPUTS.every((input) => input.isValid === true);\n    }\n  };\n\n  formElement.input.onblur = () => {\n    const inputValue = formElement.input.value.trim();\n\n    if (inputValue === '') {\n      formElement.errorText = `Field ${formElement.title.toLowerCase()} cannot be empty`;\n      formElement.errorElement = FUNC.createErrorElement(formElement);\n      formElement.container.append(formElement.errorElement);\n\n      formElement.isValid = false;\n      isAllFieldsValid = INPUTS.every((input) => input.isValid === true);\n\n      return;\n    }\n\n    if (formElement.type === 'text') {\n      if (inputValue.length < 3) {\n        formElement.errorText = `${formElement.title} must be minimum 3 characters`;\n        formElement.errorElement = FUNC.createErrorElement(formElement);\n        formElement.container.append(formElement.errorElement);\n\n        formElement.isValid = false;\n        isAllFieldsValid = INPUTS.every((input) => input.isValid === true);\n\n        return;\n      }\n\n      if (inputValue.length >= 20) {\n        formElement.errorText = `${formElement.title} must be less than 20 characters`;\n        formElement.errorElement = FUNC.createErrorElement(formElement);\n        formElement.container.append(formElement.errorElement);\n\n        formElement.isValid = false;\n        isAllFieldsValid = INPUTS.every((input) => input.isValid === true);\n\n        return;\n      }\n    }\n\n    if (formElement.type === 'email') {\n      const regex = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n\n      if (!regex.test(inputValue)) {\n        formElement.errorText = `${formElement.title} format does not match`;\n        formElement.errorElement = FUNC.createErrorElement(formElement);\n        formElement.container.append(formElement.errorElement);\n\n        formElement.isValid = false;\n        isAllFieldsValid = INPUTS.every((input) => input.isValid === true);\n\n        return;\n      }\n    }\n\n    if (formElement.type === 'tel') {\n      const regex = /^\\+38\\(0\\d{2}\\)\\s\\d{3}\\s\\d{2}\\s\\d{2}$/;\n\n      if (!regex.test(inputValue)) {\n        formElement.errorText = `${formElement.title} format does not match`;\n        formElement.errorElement = FUNC.createErrorElement(formElement);\n        formElement.container.append(formElement.errorElement);\n\n        formElement.isValid = false;\n        isAllFieldsValid = INPUTS.every((input) => input.isValid === true);\n\n        return;\n      }\n    }\n\n    if (formElement.type === 'password') {\n      const regex = /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/;\n\n      if (!regex.test(inputValue)) {\n        formElement.errorText = `${formElement.title} format does not match`;\n        formElement.errorElement = FUNC.createErrorElement(formElement);\n        formElement.container.append(formElement.errorElement);\n\n        formElement.isValid = false;\n        isAllFieldsValid = INPUTS.every((input) => input.isValid === true);\n\n        return;\n      }\n    }\n\n    formElement.isValid = true;\n\n    isAllFieldsValid = INPUTS.every((input) => input.isValid === true);\n  };\n};\n\nconst formValidation = () => {\n  INPUTS.map((input) => inputValidation(input));\n};\n\nformValidation();\n\nconst form = document.querySelector('.user-form');\nform.addEventListener('submit', (event) => {\n  if (!isAllFieldsValid) {\n    event.preventDefault();\n  }\n});\n"]}