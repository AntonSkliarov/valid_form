{"version":3,"sources":["helpers/_functions.js","helpers/_constants.js","scripts/formValidation.js"],"names":["FUNC","createErrorElement","elementName","errorElement","document","createElement","innerHTML","errorText","setAttribute","setNotValid","el","inputs","element","isValid","isAllFieldsValid","every","input","appendError","container","append","INPUTS","title","type","getElementById","querySelector","DOM","form","INPUT_TYPES","text","phone","email","pass","TEXT_LENGTH","min","max","REGEX","inputValidation","formElement","onfocus","remove","onblur","inputValue","value","trim","toLowerCase","length","test","formValidation","map","addEventListener","event","preventDefault"],"mappings":";;AEAA;;AACA;;ADDO,ADAP,ICAaoB,ADAPpB,IAAI,ECAS,CDAN,ECAS,CACpB;AACEqB,ADDFpB,ECCEoB,ADDFpB,KCCO,EAAE,MADT,KDAkB,EAAE,4BAACC,WAAD,EAAiB;ACEnCoB,ADDA,AEOJ,EDNIA,ECMAR,EDNI,EAAE,ADDAX,MCDR,MDCoB,AEOF,GFPKC,AEOF,KAAvB,GFPiC,CAACC,aAAT,CAAuB,GAAvB,CAArB;ACEAW,ADDAb,ECCAa,EDDAb,GCCK,EAAEC,ODDK,CCCG,ADDFE,CCCGiB,QDDhB,GAAyBrB,GCClB,CAAwB,MAAxB,CAHT,ADEsC,CAACK,SAArC;ACEAW,ADDAf,AEOJ,EDNIe,EDDAf,AEOEiC,ODNO,EAAEhC,GDDC,CAACI,EEOI,EDNE,CAACgB,ACMA,OFPpB,CAA0B,CEOxBY,IDNS,CAAuB,CDDlC,EAAmC,OAAnC,AEOoB,CAACxB,MDNV,CAJb,ACUsB,EAAa;ADLjCL,ADAA,AEMF,EDNEA,ICMI8B,KDNK,ADAFlC,ECAI,IALb,ACWiB,GAAGS,GFNlB,IEMF;ADLET,ADAD,ECACA,CDPS,WCOG,EAAE,IANhB;AAOEU,ADAFJ,AEMA4B,EDNExB,ADAFJ,AEMA4B,ODNS,EAAE,EDAA,AEMA,CAACrB,CFNC,IEMb,CAAkBsB,OAAlB,GAA4B,MFNd5B,EAAD,EAAKC,EEMgB,IFNrB,EAAgB;ACP7B,ADQE,AEMA,CDfkB,EAUpB,KDDQC,AEMFyB,OFNS,GAAG3B,CEMD,CFNf,AEMgBP,YAAhB,EAA8B;ADJ9BkB,ADAAT,AEKEyB,EDLFhB,EDAAT,EEKEyB,CDLG,EAAE,EDAA,CAACxB,KEKK,CDNf,ACMgBV,CFLd,GAAkB,KAAlB,GEKE,CAAyBoC,MAAzB;ADJFjB,ADAA,AEMER,EDNFQ,IAAI,ACMFR,EDNI,ADAAA,MCFR,QCQoB,EFNI,CEMDd,EFNIW,MAAM,CAACI,KAAP,CAAa,IEMZN,MFNaO,KAAD,AEMjB,CAAiBqB,WAAjB,EAA8BjB,iBAA9B,CAAnB;ADLFJ,ADDsC,AEOrC,EDNDA,KAAK,EAAEZ,IDD0CY,ICClC,CAACO,ADDsC,CAACV,OAAN,KAAkB,CCC5D,CAAwB,EDDO,OCC/B,CAHT;AAIEK,ADFsC,AEQvC,EDNCA,CCAF,EFF2B,CAAzB,KCES,EAAEd,QAAQ,CAACoB,aAAT,CAAuB,oBAAvB,CAJb;AAKEjB,ADDA,ECCAA,SAAS,ADDFO,ECCI,IALb,UDIE;ACEAX,ADDD,AEODkC,EDNElC,ACMFkC,CFtBW,UEsBA,CDNG,ACMFrB,EDNI,GCMhB,CDZA,ACYkBwB,MAAlB,GAA2B,YAAM;ADL/B3B,ADAFI,AEME,EDNAJ,ADAFI,MEMQwB,CDNC,EAAE,EDAA,EAAE,GEMK,GAAGJ,WAAW,CAACrB,GFNnBN,EAAD,AEMQ,CAAkBgC,CFNlB,IEMA,CAAwBC,IAAxB,EAAnB;ADbF,ADQE,CClBkB,EAmBpB,KDDQ/B,OAAO,GAAGF,EAAhB;ACEAW,ADAAT,AEKA,EDLAS,EDAAT,GCAK,CCKD6B,CDLG,EDAA,CAACtC,ICDV,ECMgB,KAAK,CFLnB,CEKA,EFLuBH,AEKA,IFLI,CAACC,kBAAL,CAAwBW,OAAxB,CAAvB;ACCAU,ADAAV,AEKEyB,EDLFf,EDAAV,ECAI,ACKFyB,EDLI,GDAC,CAACnB,CCFV,ICOe,CAACX,GFLd,CAAkBY,KEKhB,CFLF,CAAyBP,OAAO,CAACT,SEKEkC,GFLnC,QEK8C,CAAChB,KAAZ,CAAkBuB,WAAlB,EAAjC;ADJF5B,ADAD,ECACA,KAAK,EAAEZ,QAAQ,CAACmB,cAAT,CAAwB,OAAxB,CAHT;AAIEL,ADvBS,AE4BPlB,CF5BN,CCuBIkB,SAAS,EAAEd,QAAQ,CAACoB,GCKbP,UDLI,CAAuB,ACKhC,CAAiBoB,WAAjB,MDLS,CAJb;AAKE9B,EAAAA,SAAS,EAAE,EDCAP,ECNb;AAMEG,ACKEW,EDLFX,ICKEW,QDLU,EAAE,IANhB,ECWoB,GAAGd,mBAAKS,WAAL,CAAiB4B,WAAjB,EAA8BjB,iBAA9B,CAAnB;ADJFP,ACME,EDNFA,OAAO,EAAE;AAPX,ACcG,CDjCiB,EA4BpB;AACEQ,EAAAA,KAAK,EAAE,OADT;AAEEC,ACKA,EDLAA,IAAI,EAAE,ACKFe,ODPN,ICOiB,CAACf,IAAZ,KAAqBK,uBAAYC,IAArC,EAA2C;A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","file":"formValidation.6624df2e.js","sourceRoot":"..\\src","sourcesContent":["const FUNC = {\n  createErrorElement: (elementName) => {\n    const errorElement = document.createElement('p');\n    errorElement.innerHTML = elementName.errorText;\n    errorElement.setAttribute('class', 'error');\n\n    return errorElement;\n  },\n  setNotValid: (el, inputs) => {\n    const element = el;\n\n    element.isValid = false;\n    const isAllFieldsValid = inputs.every((input) => input.isValid === true);\n\n    return isAllFieldsValid;\n  },\n\n  appendError: (el) => {\n    const element = el;\n\n    element.errorElement = FUNC.createErrorElement(element);\n    element.container.append(element.errorElement);\n  },\n};\n\nexport default FUNC;\n","export const INPUTS = [\n  {\n    title: 'Name',\n    type: 'text',\n    input: document.getElementById('name'),\n    container: document.querySelector('#name-container'),\n    errorText: null,\n    errorElement: null,\n    isValid: false,\n  },\n  {\n    title: 'Surname',\n    type: 'text',\n    input: document.getElementById('surname'),\n    container: document.querySelector('#surname-container'),\n    errorText: null,\n    errorElement: null,\n    isValid: false,\n  },\n  {\n    title: 'Phone',\n    type: 'tel',\n    input: document.getElementById('phone'),\n    container: document.querySelector('#phone-container'),\n    errorText: null,\n    errorElement: null,\n    isValid: false,\n  },\n  {\n    title: 'Email',\n    type: 'email',\n    input: document.getElementById('email'),\n    container: document.querySelector('#email-container'),\n    errorText: null,\n    errorElement: null,\n    isValid: false,\n  },\n  {\n    title: 'Password',\n    type: 'password',\n    input: document.getElementById('pass'),\n    container: document.querySelector('#pass-container'),\n    errorText: null,\n    errorElement: null,\n    isValid: false,\n  },\n];\n\nexport const DOM = {\n  form: document.querySelector('.user-form'),\n};\n\nexport const INPUT_TYPES = {\n  text: 'text',\n  phone: 'tel',\n  email: 'email',\n  pass: 'password',\n};\n\nexport const TEXT_LENGTH = {\n  min: 3,\n  max: 20,\n};\n\nexport const REGEX = {\n  email: /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/,\n  phone: /^\\+38\\(0\\d{2}\\)\\s\\d{3}\\s\\d{2}\\s\\d{2}$/,\n  pass: /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/,\n};\n","import FUNC from '../helpers/_functions';\nimport {\n  INPUTS,\n  DOM,\n  INPUT_TYPES,\n  TEXT_LENGTH,\n  REGEX,\n} from '../helpers/_constants';\n\nlet isAllFieldsValid = false;\n\nconst inputValidation = (element) => {\n  const formElement = element;\n\n  formElement.input.onfocus = () => {\n    if (formElement.errorElement) {\n      formElement.errorElement.remove();\n\n      isAllFieldsValid = FUNC.setNotValid(formElement, INPUTS);\n    }\n  };\n\n  formElement.input.onblur = () => {\n    const inputValue = formElement.input.value.trim();\n\n    if (inputValue === '') {\n      formElement.errorText = `Field ${formElement.title.toLowerCase()} cannot be empty`;\n\n      FUNC.appendError(formElement);\n\n      isAllFieldsValid = FUNC.setNotValid(formElement, INPUTS);\n\n      return;\n    }\n\n    if (formElement.type === INPUT_TYPES.text) {\n      if (inputValue.length < TEXT_LENGTH.min) {\n        formElement.errorText = `${formElement.title} must be minimum 3 characters`;\n\n        FUNC.appendError(formElement);\n\n        isAllFieldsValid = FUNC.setNotValid(formElement, INPUTS);\n\n        return;\n      }\n\n      if (inputValue.length >= TEXT_LENGTH.max) {\n        formElement.errorText = `${formElement.title} must be less than 20 characters`;\n\n        FUNC.appendError(formElement);\n\n        isAllFieldsValid = FUNC.setNotValid(formElement, INPUTS);\n\n        return;\n      }\n    }\n\n    if (formElement.type === INPUT_TYPES.email) {\n      if (!REGEX.email.test(inputValue)) {\n        formElement.errorText = `${formElement.title} format does not match`;\n\n        FUNC.appendError(formElement);\n\n        isAllFieldsValid = FUNC.setNotValid(formElement, INPUTS);\n\n        return;\n      }\n    }\n\n    if (formElement.type === INPUT_TYPES.phone) {\n      if (!REGEX.phone.test(inputValue)) {\n        formElement.errorText = `${formElement.title} format does not match`;\n\n        FUNC.appendError(formElement);\n\n        isAllFieldsValid = FUNC.setNotValid(formElement, INPUTS);\n\n        return;\n      }\n    }\n\n    if (formElement.type === INPUT_TYPES.pass) {\n      if (!REGEX.pass.test(inputValue)) {\n        formElement.errorText = `${formElement.title} format does not match`;\n\n        FUNC.appendError(formElement);\n\n        isAllFieldsValid = FUNC.setNotValid(formElement, INPUTS);\n\n        return;\n      }\n    }\n\n    formElement.isValid = true;\n\n    isAllFieldsValid = INPUTS.every((input) => input.isValid === true);\n  };\n};\n\nconst formValidation = () => {\n  INPUTS.map((input) => inputValidation(input));\n};\n\nformValidation();\n\nDOM.form.addEventListener('submit', (event) => {\n  if (!isAllFieldsValid) {\n    event.preventDefault();\n  }\n});\n"]}