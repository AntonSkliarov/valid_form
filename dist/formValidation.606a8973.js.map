{"version":3,"sources":["helpers/_functions.js","helpers/_constants.js","scripts/formValidation.js"],"names":["FUNC","createErrorElement","elementName","errorElement","document","createElement","innerHTML","errorText","setAttribute","setNotValid","el","inputs","isAllFieldsValid","isValid","every","input","appendError","element","container","append","INPUTS","title","type","getElementById","querySelector","inputValidation","formElement","onfocus","remove","onblur","inputValue","value","trim","toLowerCase","length","test","formValidation","map","form","addEventListener","event","preventDefault"],"mappings":"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","file":"formValidation.606a8973.js","sourceRoot":"..\\src","sourcesContent":["const FUNC = {\n  createErrorElement: (elementName) => {\n    const errorElement = document.createElement('p');\n    errorElement.innerHTML = elementName.errorText;\n    errorElement.setAttribute('class', 'error');\n\n    return errorElement;\n  },\n  setNotValid: (el, inputs) => {\n    const element = el;\n\n    element.isValid = false;\n    const isAllFieldsValid = inputs.every((input) => input.isValid === true);\n\n    return isAllFieldsValid;\n  },\n\n  appendError: (el) => {\n    const element = el;\n\n    element.errorElement = FUNC.createErrorElement(element);\n    element.container.append(element.errorElement);\n  },\n};\n\nexport default FUNC;\n","const INPUTS = [\n  {\n    title: 'Name',\n    type: 'text',\n    input: document.getElementById('name'),\n    container: document.querySelector('#name-container'),\n    errorText: null,\n    errorElement: null,\n    isValid: false,\n  },\n  {\n    title: 'Surname',\n    type: 'text',\n    input: document.getElementById('surname'),\n    container: document.querySelector('#surname-container'),\n    errorText: null,\n    errorElement: null,\n    isValid: false,\n  },\n  {\n    title: 'Phone',\n    type: 'tel',\n    input: document.getElementById('phone'),\n    container: document.querySelector('#phone-container'),\n    errorText: null,\n    errorElement: null,\n    isValid: false,\n  },\n  {\n    title: 'Email',\n    type: 'email',\n    input: document.getElementById('email'),\n    container: document.querySelector('#email-container'),\n    errorText: null,\n    errorElement: null,\n    isValid: false,\n  },\n  {\n    title: 'Password',\n    type: 'password',\n    input: document.getElementById('pass'),\n    container: document.querySelector('#pass-container'),\n    errorText: null,\n    errorElement: null,\n    isValid: false,\n  },\n];\n\nexport default INPUTS;\n","import FUNC from '../helpers/_functions';\nimport INPUTS from '../helpers/_constants';\n\nlet isAllFieldsValid = false;\n\nconst inputValidation = (element) => {\n  const formElement = element;\n\n  formElement.input.onfocus = () => {\n    if (formElement.errorElement) {\n      formElement.errorElement.remove();\n\n      isAllFieldsValid = FUNC.setNotValid(formElement, INPUTS);\n    }\n  };\n\n  formElement.input.onblur = () => {\n    const inputValue = formElement.input.value.trim();\n\n    if (inputValue === '') {\n      formElement.errorText = `Field ${formElement.title.toLowerCase()} cannot be empty`;\n\n      FUNC.appendError(formElement);\n\n      isAllFieldsValid = FUNC.setNotValid(formElement, INPUTS);\n\n      return;\n    }\n\n    if (formElement.type === 'text') {\n      if (inputValue.length < 3) {\n        formElement.errorText = `${formElement.title} must be minimum 3 characters`;\n\n        FUNC.appendError(formElement);\n\n        isAllFieldsValid = FUNC.setNotValid(formElement, INPUTS);\n\n        return;\n      }\n\n      if (inputValue.length >= 20) {\n        formElement.errorText = `${formElement.title} must be less than 20 characters`;\n\n        FUNC.appendError(formElement);\n\n        isAllFieldsValid = FUNC.setNotValid(formElement, INPUTS);\n\n        return;\n      }\n    }\n\n    if (formElement.type === 'email') {\n      const regex = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n\n      if (!regex.test(inputValue)) {\n        formElement.errorText = `${formElement.title} format does not match`;\n\n        FUNC.appendError(formElement);\n\n        isAllFieldsValid = FUNC.setNotValid(formElement, INPUTS);\n\n        return;\n      }\n    }\n\n    if (formElement.type === 'tel') {\n      const regex = /^\\+38\\(0\\d{2}\\)\\s\\d{3}\\s\\d{2}\\s\\d{2}$/;\n\n      if (!regex.test(inputValue)) {\n        formElement.errorText = `${formElement.title} format does not match`;\n\n        FUNC.appendError(formElement);\n\n        isAllFieldsValid = FUNC.setNotValid(formElement, INPUTS);\n\n        return;\n      }\n    }\n\n    if (formElement.type === 'password') {\n      const regex = /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/;\n\n      if (!regex.test(inputValue)) {\n        formElement.errorText = `${formElement.title} format does not match`;\n\n        FUNC.appendError(formElement);\n\n        isAllFieldsValid = FUNC.setNotValid(formElement, INPUTS);\n\n        return;\n      }\n    }\n\n    formElement.isValid = true;\n\n    isAllFieldsValid = INPUTS.every((input) => input.isValid === true);\n  };\n};\n\nconst formValidation = () => {\n  INPUTS.map((input) => inputValidation(input));\n};\n\nformValidation();\n\nconst form = document.querySelector('.user-form');\nform.addEventListener('submit', (event) => {\n  if (!isAllFieldsValid) {\n    event.preventDefault();\n  }\n});\n"]}